~~ Basic terminal command:-

ls →   Lists files and directories in the current directory.

ls -a/dir -a →   Lists all files and directories, including hidden ones.

cd <directory> →   Changes the current directory.

cd .. →   Moves up one directory.

cd / →   Move to root  directory.

pwd →   Prints the current working directory.

mkdir <directory> →   Creates a new directory.

touch <file> →    Creates a new file.

rm <file> →    Removes a file.

rm -r <directory> →    Removes a directory and its contents.

cat <file> →    Displays the contents of a file.

open (file name) →   Using to open a file in terminal



~~ SSH Key gentrator command:-

ssh key → First, check if an .ssh directory exists in your local file system. If the directory exists, navigate to it. Otherwise, generate a new SSH key using the following command:

generate new ssh key → ssh-keygen -o -t rsa -C git-hub email


~~ Git configration command:-

git --version →   For checking the current Git version.

--global →   Used when adding a command for all repositories.

git config →   For checking Git configuration.

git config user.name "your_name" →   To set up the configuration name.

git config user.email "your_email" →   To set up the configuration email.

git config --list →   For checking all configuration list items.

git config --global/--local unset (property) →   For unset property



~~ Make working directory:- 

git init →   Creating/Initializes a new Git repository in the current directory. 

git clone <repository_url> →   Clones a remote repository to your local machine.1 



~~ Working directory to stagging are:-

git add <file Name> →   Adds a file to the staging area.

git add <file Name> →   Stage all changed file in directory and subdirectory.

git add . →   Adds all changes to the staging area.

git add *.js →   Directory wildcard

git add **/*.js →   Directory & subdirectory wildcard

git add diff →   When a file in stagging state the we will check the diffrence

git status →   Checking the staging history

git restore →   restore file / jump to previous poistion

git rm --cached <file Name> →   Unstage a file 



~~ Stagging area to loacl repository:-

-(Commiting)
git commit -m "message" →   For commiting 

git log →   Shows the commit history.

git log --oneline →   Shows the commit history in online  

git add <File Name> && git commit -m "commit message" →   At a time file will go in stagging area and then local repository


-(Uncommiting)
git reset HEAD^ →   Uncommit a file / file will moved to staging area

git reset --soft HEAD^ →   File will moved to Working directory

git reset --hard HEAD^ →   File will moved to outside of Working directory


-(Commit Jumping)
git show →   Display the recent (HEAD) commit details

git show <Commmit id 1st-7 character> →    Display the specific commit details based on commit id

git show HEAD~2 →   Display the specific commit detailsby order number  

git checkout <Commmit id> →    To jump a commit based on these commit id

git checkout master →    To return recent commit


~~[.gitignore file]
Ignoring Specific Files: →    secret-config.json 

Ignoring by File Type: →    *.log, *.tmp, *.jason, *.css

Ignoring Directories: →   node_modules/, dist/

Ignoring Files in Subdirectories: →   logs/*.log

Ignoring Everything Except One File: →   dist/*, !dist/index.html

Comments: →   # This is a comment


~~[alias => it means shortcurt of git code]
git config --global alias.(keyword) "property" === git config --global alias.s "status"

for unset 
git config --global --unset alias.(keyword) === git config --global --unset alias.s

~~Check remote connection: git remote
git remote -v →   shows the remote along with the url

git remote add name ‹REMOTE_URL> →   Syntax

git remote add origin https://github.com/anisul-lslam/life-story.git →   Example

git remote remove origin →    Remove the Remote


~~Branch
git branch →   Check the all git branches

git branch name(feature1) →  Create new branch

git checkout name(feature1) →  Switch to another branch

git branch -d feature1 →  Delate a branch(but at first we will need to switch another branch)